{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedUserId","selectUser","handleTodoFilter","filterInputValue","filterBy","handleSelectFilter","className","type","placeholder","value","onChange","map","todo","classNames","completed","readOnly","checked","title","userId","onClick","id","url","getTodos","a","fetch","json","getUser","user","CurrentUser","state","name","email","phone","this","props","setState","prevProps","clearUser","React","Component","App","filtredTodos","handleSelectUser","event","target","_","prevState","filter","includes","filtredByNotCompleted","filtredByCompleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.70d01a82.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport classNames from 'classnames';\nimport React from 'react';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[];\n  selectedUserId: number;\n  selectUser: (userId: number) => void;\n  handleTodoFilter: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  filterInputValue: string;\n  filterBy: string;\n  handleSelectFilter: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedUserId,\n  selectUser,\n  handleTodoFilter,\n  filterInputValue,\n  filterBy,\n  handleSelectFilter,\n}) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <div className=\"field\">\n      <label className=\"label\">Filter by title</label>\n      <div className=\"control\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          placeholder=\"Text input\"\n          value={filterInputValue}\n          onChange={handleTodoFilter}\n        />\n      </div>\n    </div>\n\n    <div className=\"select\">\n      <select\n        value={filterBy}\n        onChange={handleSelectFilter}\n      >\n        <option value=\"\">Choose filter</option>\n        <option value=\"all\">All</option>\n        <option value=\"not completed\">Not completed</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames(\n              'TodoList__item',\n              {\n                'TodoList__item--checked': todo.completed,\n                'TodoList__item--unchecked': !todo.completed,\n              },\n            )}\n          >\n            <input\n              type=\"checkbox\"\n              readOnly\n              checked={todo.completed}\n            />\n            <p>{todo.title}</p>\n\n            <button\n              className={classNames(\n                'TodoList__user-button',\n                'button',\n                { 'TodoList__user-button--selected': selectedUserId === todo.userId },\n              )}\n              type=\"button\"\n              onClick={() => selectedUserId !== todo.userId && selectUser(todo.userId)}\n            >\n              {`User #${todo.userId}`}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const url = 'https://mate.academy/students-api';\n\nexport async function getTodos(): Promise<Todo[]> {\n  const todos = await fetch(`${url}/todos`);\n\n  return todos.json();\n}\n\nexport async function getUser(userId: number): Promise<User> {\n  const user = await fetch(`${url}/users/${userId}`);\n\n  return user.json();\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedUserId: number;\n  clearUser: (userId: number) => void;\n};\n\ntype State = {\n  user: User;\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: {\n      id: 0,\n      name: '',\n      email: '',\n      phone: '',\n    },\n  };\n\n  async componentDidMount() {\n    const user = await getUser(this.props.selectedUserId);\n\n    this.setState({ user });\n  }\n\n  async componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      const user = await getUser(this.props.selectedUserId);\n\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ user });\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${user.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          className=\"button CurrentUser__clear\"\n          type=\"button\"\n          onClick={() => this.props.clearUser(0)}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-case-declarations */\n/* eslint-disable react/no-did-update-set-state */\nimport React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n  filtredTodos: Todo[];\n  filterInputValue: string;\n  filterBy: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    filtredTodos: [],\n    filterInputValue: '',\n    filterBy: '',\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({\n      todos,\n      filtredTodos: todos,\n    });\n  }\n\n  componentDidUpdate(_: unknown, prevState: State) {\n    const { filterInputValue, todos, filterBy } = this.state;\n\n    if (prevState.filterInputValue !== filterInputValue) {\n      const filtredTodos = todos.filter(todo => todo.title.includes(filterInputValue));\n\n      this.setState({ filtredTodos });\n    }\n\n    if (prevState.filterBy !== filterBy) {\n      switch (filterBy) {\n        case 'all':\n          this.setState({ filtredTodos: todos });\n          break;\n\n        case 'not completed':\n          const filtredByNotCompleted = todos.filter(todo => todo.completed === false);\n\n          this.setState({ filtredTodos: filtredByNotCompleted });\n          break;\n\n        case 'completed':\n          const filtredByCompleted = todos.filter(todo => todo.completed === true);\n\n          this.setState({ filtredTodos: filtredByCompleted });\n          break;\n\n        default:\n          return null;\n      }\n    }\n\n    return null;\n  }\n\n  handleSelectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId });\n  };\n\n  handleTodoFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ filterInputValue: event.target.value });\n  };\n\n  handleSelectFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ filterBy: event.target.value });\n  };\n\n  render() {\n    const {\n      selectedUserId,\n      filtredTodos,\n      filterInputValue,\n      filterBy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={filtredTodos}\n            selectedUserId={selectedUserId}\n            selectUser={this.handleSelectUser}\n            handleTodoFilter={this.handleTodoFilter}\n            filterInputValue={filterInputValue}\n            filterBy={filterBy}\n            handleSelectFilter={this.handleSelectFilter}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                clearUser={this.handleSelectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}